@model Project1Todo.Models.List

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>List</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ListName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ListName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ListName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div id="itemTableDiv"></div>

<!-- Create a form using Ajax to submit string to database then update the page -->
<div id="itemCreateForm">
    <!--Create ajax fuction to creat form in items controller
        <ControllerMethod>, <Controller>, <Actions>-->
    @{Html.RenderPartial("~/Views/Lists/_ItemAdd.cshtml");}

</div>





<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src = "~/Scripts/jquery.unobtrusive-ajax.min.js" ></script>
        <script src="~/Custom_Scripts/BuildItemTable.js"></script>
}
